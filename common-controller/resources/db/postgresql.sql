BEGIN TRANSACTION;

CREATE TABLE IF NOT EXISTS SUBSCRIPTION (
	UUID VARCHAR(256),
    API_NAME VARCHAR(256),
    API_VERSION VARCHAR(30),
    SUB_STATUS VARCHAR(50),
    ORGANIZATION VARCHAR(100),
    PRIMARY KEY (UUID)
);

CREATE TABLE IF NOT EXISTS APPLICATION (
    UUID VARCHAR(256),
    NAME VARCHAR(100),
    OWNER VARCHAR(100),
    ORGANIZATION VARCHAR(100),
    PRIMARY KEY(UUID),
    UNIQUE (UUID)
);

CREATE TABLE IF NOT EXISTS APPLICATION_SUBSCRIPTION_MAPPING (
    UUID VARCHAR(100),
    APPLICATION_UUID VARCHAR(512),
    SUBSCRIPTION_UUID VARCHAR(512),
    ORGANIZATION VARCHAR(100),
    FOREIGN KEY(APPLICATION_UUID) REFERENCES APPLICATION(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(SUBSCRIPTION_UUID) REFERENCES SUBSCRIPTION(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(APPLICATION_UUID, SUBSCRIPTION_UUID),
	UNIQUE(UUID)
);

CREATE TABLE IF NOT EXISTS APPLICATION_KEY_MAPPING (
    APPLICATION_UUID VARCHAR(512),
    APPLICATION_IDENTIFIER VARCHAR(512),
    KEY_TYPE VARCHAR(512) NOT NULL,
    ENVIRONMENT VARCHAR(512) NOT NULL,
    SECURITY_SCHEME VARCHAR(512) NOT NULL,
    ORGANIZATION VARCHAR(100),
    FOREIGN KEY(APPLICATION_UUID) REFERENCES APPLICATION(UUID) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(APPLICATION_UUID,SECURITY_SCHEME,KEY_TYPE,ENVIRONMENT)
);

CREATE TABLE IF NOT EXISTS APPLICATION_ATTRIBUTES (
    APPLICATION_UUID VARCHAR(256) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    APP_ATTRIBUTE VARCHAR(1024) NOT NULL,
    FOREIGN KEY (APPLICATION_UUID) REFERENCES APPLICATION (UUID) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (APPLICATION_UUID,NAME)
);

-- CREATE INDEX IF NOT EXISTS IDX_AAKM_CK on APPLICATION_KEY_MAPPING (APPLICATION_IDENTIFIER);

commit;